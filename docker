# Use an official Python runtime as a parent image
FROM python:3.12-slim

# Install necessary packages
RUN apt-get update && \
    apt-get install -y \
    wget \
    unzip \
    gnupg \
    libgconf-2-4 \
    libnss3 \
    libx11-xcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libxss1 \
    libxtst6 \
    libasound2 \
    libdbus-1-3 \
    libu2f-udev \
    fonts-liberation \
    libappindicator3-1 \
    libgtk-3-0 \
    && rm -rf /var/lib/apt/lists/*

# Install Google Chrome
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list' && \
    apt-get update && \
    apt-get install -y google-chrome-stable

# Install ChromeDriver
RUN CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | sed 's/\.[0-9]*$//') && \
    CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) && \
    wget https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip && \
    unzip chromedriver_linux64.zip && \
    mv chromedriver /usr/local/bin/ && \
    rm chromedriver_linux64.zip

# Set up Robot Framework and SeleniumLibrary
RUN python -m pip install --upgrade pip && \
    pip install robotframework robotframework-seleniumlibrary

# Set the working directory
WORKDIR /workspace

# Copy your test files into the Docker image
COPY SeleniumLab1.robot /workspace/

# Default command to run Robot Framework tests
CMD ["robot", "--loglevel", "DEBUG", "--outputdir", "output", "SeleniumLab1.robot"]
